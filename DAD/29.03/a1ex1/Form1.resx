<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCADIAMgDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDpJI/9HHQEHHAqAwZUg8jGSDVl/nTdkjPt0qrJI20jdnFfPNHT
        chMajGP505NhIORjpUL4Kkk9+aSMNuwEH507AWvkOecgc0jsgwSB+BpjJtXgg+pFGAvUfN79qQE3yFO/
        5VIjR/3Tz1xVZWxySaC2e2OaALYKYJIwKVTC2NowKqAMeB396UBi3rjil6DLY2+Yent70rcvwp9j2qBF
        YcYzjtTyrdsj1pWC5K7L6DPf3pq4OOhyOwzio8YHQ+1ABJJNFguPx83bjpxSJ97aCMe3emupDdsCk6EY
        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
        5mSf/9k=
</value>
  </data>
</root>